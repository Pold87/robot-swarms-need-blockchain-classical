data_summary <- function(data, varname, groupnames){
  require(plyr)
  summary_func <- function(x, col){
    c(mean = mean(x[[col]], na.rm=TRUE),
      sd = sd(x[[col]], na.rm=TRUE))
  }
  data_sum<-ddply(data, groupnames, .fun=summary_func,
                  varname)
  data_sum <- .... [TRUNCATED] 

+ + + + . + 
create.df.exp1 <- function(max.trials=50) {
    df <- data.frame()
        for (dat in dates.exp1) {
            for (i in 1:max.trials) {
                for (d in difficulties) {
                    for (node in nodes){

                        trials.name <- sprintf("%s/experiment ..." ... [TRUNCATED] 
df
df
df
X$error = X$actual - X$predicted
X
df$error = df$actual - df$predicted
df
df
df
df$error = df$actual - df$predicted
df
mean(df$error)
max(df$error)
data_summary <- function(data, varname, groupnames){
  require(plyr)
  summary_func <- function(x, col){
    c(mean = mean(x[[col]], na.rm=TRUE),
      sd = sd(x[[col]], na.rm=TRUE))
  }
  data_sum<-ddply(data, groupnames, .fun=summary_func,
                  varname)
  data_sum <- .... [TRUNCATED] 
max(df$error)
min(df$error)
plot(df$error)
histogram(df$error)
hist(df$error)
mean(df$error)
a
min(a)
max(a)
max(a) - min(a)
v
b
min(b)
max(b)
max(b) - min(b)
a
df1
df1
df1
df1
df1
df[1,1]
df1[1,1]
df1[1,3]
df1[3,3]
df1[2,1:]
df1[2,1:21]
df1[2,2:21]
mean(df1[2,2:21])
mean(as.numeric(df1[2,2:21]))
as.numeric(df1[2,2:21])
df1
as.numeric(df1[2,2:21])
mean(df1[2,2:23])
mean(df1[2,2:21])
str(df1)
mean(df1[2,1:21])
mean(df1[3,1:21])
mean(df1[3,21])
mean(df1[3,22])
mean(df1[3,20:22])
mean(df1[3,20:21])
df1
data_summary(df1, "actual")
data_summary(df1, "actual", "predicted")
data_summary(df1, "predicted", "actual")
plot(sum$actual, sum$predicted)
sum
df1
sum
df3.safe
df3.safe
df3
num.byz
df3.safe
                                agg.data <- data.frame()
agg.data
agg.data$a <- 1
    df <- data.frame(matrix(ncol = 5, nrow = 0))
df
    colnames(df) <- c("byz", "threshold", "difficulty", "actual", "predicted")
df$byz = 1
df3.safe
df3.safe
mean(df3.safe)
mean(as.numeric(df3.safe))
mean(as.numeric(df3.safe[2:nol(df3.safe)]))
mean(as.numeric(df3.safe[2:ncol(df3.safe)]))
as.numeric(df3.safe)
str(df3.safe
)
mean(as.numeric(df3.safe[2:ncol(df3.safe)]))  C-c C-c  C-c C-c
df3.nonsafe$error <- df3.nonsafe$actual - df3.nonsafe$predicted
d  C-c C-c
